
function ISODateString(d){function pad(n){return n<10?'0'+n:n}
return d.getUTCFullYear()+'-'
+pad(d.getUTCMonth()+1)+'-'
+pad(d.getUTCDate())+'T'
+pad(d.getUTCHours())+':'
+pad(d.getUTCMinutes())+':'
+pad(d.getUTCSeconds())+'Z'}
function adjustDate(iso_date){MM={Jan:"January",Feb:"February",Mar:"March",Apr:"April",May:"May",Jun:"June",Jul:"July",Aug:"August",Sep:"September",Oct:"October",Nov:"November",Dec:"December"};DD={Sun:"Sunday",Mon:"Monday",Tue:"Tuesday",Wed:"Wednesday",Thu:"Thursday",Fri:"Friday",Sat:"Saturday"};proper_date=String(new Date(iso_date)).split(" ");correct_formatting=DD[proper_date[0]]+" "+MM[proper_date[1]]+" "+proper_date[2]+", "+proper_date[3]+" - ";clock_time=proper_date[4].substring(0,proper_date[4].length-3);if(clock_time.substring(0,2)=="00"){clock_time="12"+clock_time.substring(2,clock_time.length)+" AM";}
else if(clock_time.substring(0,1)=="0"){clock_time=clock_time.substring(1,clock_time.length)+" AM";}
else if(Number(clock_time.substring(0,2))<12){clock_time+=" AM";}
else if(Number(clock_time.substring(0,2))==12){clock_time+=" PM";}
else if(Number(clock_time.substring(0,2))>12){new_number=String(Number(clock_time.substring(0,2))-12);clock_time=new_number+clock_time.substring(2,clock_time.length)+" PM";}
correct_formatting+=clock_time;return correct_formatting;}
(function($){$.grabCalendar=function(args){var googleCalendarResponse;var apiUrl=encodeURI('https://www.googleapis.com/calendar/v3/calendars/'+calendarid+'/events?singleEvents=true&orderBy=startTime&key='+mykey);if(typeof args!="undefined"){if(args.hasOwnProperty('maxEvents')&&args.maxEvents<2501){apiUrl=apiUrl+"&maxResults="+args.maxEvents;}
if(args.hasOwnProperty('upcoming')&&args.upcoming){var d=new Date();apiUrl=apiUrl+"&timeMin="+ISODateString(d);}}
$.ajax({type:'GET',url:apiUrl,dataType:'json',async:false,success:function(response){var metadata={};if(typeof args=="undefined"){googleCalendarResponse=response;return;}
if((args.hasOwnProperty('clean_date')&&args.clean_date)){for(var i=0;i<response.items.length;i++){response.items[i].end.dateTime=adjustDate(response.items[i].end.dateTime);response.items[i].start.dateTime=adjustDate(response.items[i].start.dateTime);}}
if(args.hasOwnProperty('metadata')){for(var i=0;i<args.metadata.length;i++){metadata[args.metadata[i]]=true;}
for(var i=0;i<response.items.length;i++){if(typeof response.items[i].description!="undefined"){var description=response.items[i].description.split("\n");for(var j=0;j<description.length;j++){var field=description[j].split(": ");if(field[0]in metadata){response.items[i][field[0]]=field[1];}}}}}
if(typeof args!="undefined"&&!args.hasOwnProperty('type')||args.type=="full"){googleCalendarResponse=response;}
else if(args.type==="events"){googleCalendarResponse=[];for(var i=0;i<response.items.length;i++){var basicInfo={};basicInfo.start=response.items[i].start.dateTime;basicInfo.end=response.items[i].end.dateTime;basicInfo.summary=response.items[i].summary;if(typeof response.items[i].description!="undefined"){basicInfo.description=response.items[i].description;}
if(typeof response.items[i].location!="undefined"){basicInfo.location=response.items[i].location;}
if(args.hasOwnProperty('metadata')){for(var key in metadata){basicInfo[key]=response.items[i][key];}}
googleCalendarResponse.push(basicInfo);}}
else if(args.type==="detailedEvents"){googleCalendarResponse=response.items;}
else{console.log("The request of type: "+type+" wasn't valid. Please check for possible syntax errors.");}},error:function(response){console.log("The Google Calender API failed to connect.");}});return googleCalendarResponse;};}(jQuery));